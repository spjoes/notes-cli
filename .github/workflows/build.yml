name: Build CLI Binaries

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build for multiple platforms
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: |
          go mod download

      - name: Build binary ({{ matrix.goos }}/{{ matrix.goarch }})
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          OUTPUT_DIR="build/${{ matrix.goos }}_${{ matrix.goarch }}"
          mkdir -p "$OUTPUT_DIR"

          if [ "${{ matrix.goos }}" = "windows" ]; then
            BIN_NAME="notes.exe"
          else
            BIN_NAME="notes"
          fi

          go build -o "$OUTPUT_DIR/$BIN_NAME" ./cmd/

      - name: Upload built binaries
        uses: actions/upload-artifact@v3
        with:
          name: note-binaries-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/${{ matrix.goos }}_${{ matrix.goarch }}/
